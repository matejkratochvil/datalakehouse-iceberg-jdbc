services:
  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: minio
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    volumes:
      - ./s3data:/data
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
      MINIO_DEFAULT_BUCKETS: iceberg-warehouse
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - datalakehouse_network

  mcinit:
    image: minio/mc:RELEASE.2025-04-16T18-13-26Z
    container_name: mcinit
    depends_on:
      - minio
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set dockerminio http://minio:9000 admin password;
      /usr/bin/mc mb dockerminio/iceberg-warehouse;
      exit 0;
      "
    networks:
      - datalakehouse_network
      
  postgres:
    image: postgres:15
    container_name: postgres_catalog
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: iceberg
      POSTGRES_PASSWORD: icebergpassword
      POSTGRES_DB: iceberg_catalog
    volumes:
      - ./config/postgres/iceberg-setup.sql:/docker-entrypoint-initdb.d/iceberg-setup.sql
      - ./config/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iceberg -d iceberg_catalog"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - datalakehouse_network

  trino-coordinator:
    image: trinodb/trino:475
    container_name: trino-coordinator
    ports:
      - "8080:8080"
    volumes:
      - ./config/trino/catalog:/etc/trino/catalog
    depends_on:
      minio:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - datalakehouse_network

  jupyterlab:
    image: quay.io/jupyter/scipy-notebook:python-3.12.10
    container_name: jupyterlab
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/notebooks
      - ./config:/home/jovyan/work/config # To access config files from notebook if needed
      - ./s3data:/home/jovyan/work/s3data # To inspect MinIO data directly if needed
    environment:
      JUPYTER_ENABLE_LAB: "yes"
      JUPYTER_TOKEN: "icebergrocks"
    depends_on:
      - trino-coordinator
      - minio
      - postgres
    command: start-notebook.sh --NotebookApp.token='icebergrocks' --NotebookApp.password=''
    networks:
      - datalakehouse_network

  flink-jobmanager:
    build: ./flink
    container_name: flink-jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager  # TODO: needs to be set here, check why not from the conf file
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    networks:
      - datalakehouse_network

  flink-taskmanager:
    build: ./flink
    container_name: flink-taskmanager
    command: taskmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager # TODO: needs to be set here, check why not from the conf file
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    networks:
      - datalakehouse_network

volumes:
  postgres_data:

networks:
  datalakehouse_network:
    name: datalakehouse_network